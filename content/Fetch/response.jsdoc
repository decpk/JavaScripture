Response : Object

Represents a response from a web request initiated by %%/Window#fetch|fetch()%%.
fetch(), %%/Request|Request%% and Response are a new, low level replacement for 
%%/XMLHttpRequest|XMLHttpRequest%%.

Spec:
https://fetch.spec.whatwg.org/#response-class

----
new Response([body = null : Object, [init : { \
  status = 200 : Number, \ 
  statusText = '' : String, \
  headers : Object \
  }]]) : Response

**body** must be one of %%/ArrayBuffer|ArrayBuffer%%,
%%/ArrayBufferView|ArrayBufferView%%, %%/Blob|Blob%%, %%/FormData|FormData%%,
%%/ReadableStream|ReadableStream%%, %%/String|String%%, or 
%%%/URLSearchParams|URLSearchParams%%.

----
instance.body : ReadableStream

<example>
const res = await fetch('/fireworks.ogv');
const reader = res.body.getReader();

let result;
while (!(result = await reader.read()).done) {
  console.log('chunk size:', result.value.byteLength);
}
</example>

ReadOnly:
true

----
instance.headers : Headers

ReadOnly:
true

----
instance.ok : Boolean

**true** if the server returned a successful %%#status|**status**%% code (200-299).

<example>
const res1 = await fetch('https://httpbin.org/status/200');
console.log(res1.ok);

const res2 = await fetch('https://httpbin.org/status/404');
console.log(res2.ok);
</example>

ReadOnly:
true

----
instance.redirected : Boolean

**true** if the server returned a redirect %%#status|**status**%% code (301, 302, etc).

<example>
const res1 = await fetch('https://httpbin.org/status/200');
console.log(res1.redirected);

const res2 = await fetch('https://httpbin.org/status/301');
console.log(res2.redirected);
</example>

ReadOnly:
true

----
instance.status : Number

The http status code for the request. See %%#statusText|**statusText**%% for
a description of the code.

<example>
const res1 = await fetch('https://httpbin.org/status/200');
console.log(res1.status);

const res2 = await fetch('https://httpbin.org/status/404');
console.log(res2.status);
</example>

ReadOnly:
true

----
instance.statusText : String

A description of the %%#status|status return code%%.

<example>
const res1 = await fetch('https://httpbin.org/status/200');
console.log(res1.statusText);

const res2 = await fetch('https://httpbin.org/status/404');
console.log(res2.statusText);
</example>

ReadOnly:
true

----
instance.trailer : Promise<Headers>

ReadOnly:
true

----
instance.type : String

Will be one of:
**'basic'**, 
**'cors'**, 
**'default'**, 
**'error'**, 
**'opaque'**,
**'opaqueredirect'**.

ReadOnly:
true

----
instance.url : String

ReadOnly:
true

----
prototype.arrayBuffer() : Promise<ArrayBuffer>

----
prototype.blob() : Promise<Blob>

----
prototype.clone() : Response

----
prototype.formData() : Promise<FormData>

----
prototype.json() : Promise<Object>

----
prototype.text() : Promise<String>

----
error() : Response

----
redirect(url : String, [status = 302 : Number]) : Response
